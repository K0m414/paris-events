{"version":3,"sources":["components/ErrorData.js","services/EventServices.js","services/StorageService.js","components/ManageFavorite.js","components/DetailCard.js","components/LatestEvent.js","views/Home.js","views/NotFound.js","components/Card.js","views/SearchEvents.js","views/Event.js","views/Favorites.js","components/Navbar.js","App.jsx","reportWebVitals.js","index.js"],"names":["ErrorData","className","DateFormat","LocalDate","date","Date","toLocaleString","year","month","day","LocalHour","hour","minute","KEY","StorageService","getFavorisID","favoriteID","window","localStorage","getItem","JSON","parse","setFavorisID","ID","setItem","stringify","ManageFavorite","id","useState","favotitesEventsID","setFavotitesEventsID","useEffect","onClick","find","element","splice","indexOf","push","DetailCard","event","onClose","eventID","EventData","fields","title","src","cover","url","alt","cover_alt","dangerouslySetInnerHTML","__html","description","EventServices","date_start","date_end","price_detail","address_name","address_street","address_zipcode","address_city","transport","contact_phone","contact_mail","contact_twitter","contact_facebook","LatestEvent","props","eventData","eventdata","displayEventDetail","setDisplayEventDetail","isActive","setActive","filename","category","lead_text","Home","setEventData","errorData","setErrorData","axios","get","then","response","data","records","record","catch","e","console","log","NotFound","Card","SearchEvents","datas","setDatas","errorTerm","setErrorTerm","searchTerm","setSearchTerm","URL","ErrorTermCheck","length","placeholder","type","onInput","value","target","map","Event","favorites","Navbar","exact","to","activeClassName","App","path","component","Favorites","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e051b1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/ErrorData.css'\r\nconst ErrorData = () => {\r\n    return (\r\n        <div className=\"page-error-API\">\r\n           <p>Il y a un probleme avec l'API. Veuillez réessayer plus tard.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorData;","const DateFormat = {\r\n    LocalDate(date) {\r\n        const dateFR = new Date(date).toLocaleString('fr-FR', { year: 'numeric', month: '2-digit', day: '2-digit'});\r\n        return dateFR;\r\n    },\r\n    LocalHour(hour) {\r\n        const hourFR = new Date(hour).toLocaleString('fr-FR', { hour: '2-digit', minute: '2-digit'});\r\n        return hourFR;\r\n    }\r\n    \r\n};\r\n\r\nexport default DateFormat;","const KEY = \"parisEventsFavoritesID\";\r\n\r\nconst StorageService = {\r\n  getFavorisID() {\r\n    let favoriteID = window.localStorage.getItem(KEY); \r\n    favoriteID = favoriteID ? JSON.parse(favoriteID) : [];\r\n    return favoriteID;\r\n  },\r\n\r\n  setFavorisID(ID) {\r\n    let storedID = window.localStorage.setItem(KEY, JSON.stringify(ID));\r\n    return storedID;\r\n  },\r\n};\r\n\r\nexport default StorageService;","import React, { useEffect, useState } from 'react';\r\nimport StorageService from '../services/StorageService';\r\nimport \"./css/ManageFavorite.css\"\r\nconst ManageFavorite = (id) => {\r\n    const [favotitesEventsID, setFavotitesEventsID] = useState(false); // initialise à false\r\n    // const KEY = \"parisEventsFavoritesID\";\r\n    \r\n        const favoriteButton = () => { // fonction qui permet de vérifier le local storage, d'ajouter et supprimer des événements\r\n            setFavotitesEventsID(!favotitesEventsID); // si le local storage est vide = false et si il y qqch = true \r\n            let favoriteID = StorageService.getFavorisID(); // récupère la valeur dans le local\r\n                \r\n            if (favoriteID.find(element => element = id )) { //si ID est déjà dans le local storage alors enlève le\r\n                setFavotitesEventsID(false);    //et passer favotitesEventsID a true \r\n                favoriteID.splice(favoriteID.indexOf(id), 1); \r\n            }\r\n            \r\n            else { // ID n'est pas déjà dans le local storage alors\r\n                setFavotitesEventsID(true); //passer favotitesEventsID a true \r\n                favoriteID.push(id); // et ajouter le nouvel ID \r\n            }\r\n             StorageService.setFavorisID(favoriteID); // met a jour la nouvelle valeur favoriteID\r\n            // StorageService.setFavorisID([...favoriteID, id]); // met a jour la nouvelle valeur favoriteID\r\n             }\r\n             \r\n            useEffect(() => {\r\n            let favoriteID = StorageService.getFavorisID();\r\n            StorageService.setFavorisID(favoriteID); // sauvegarde id dans le local storage \r\n            }, [id]) \r\n          \r\n    return (\r\n        <div>\r\n            {/* se declenche au click sur le button */}\r\n            <button className=\"favorite-button\" onClick={favoriteButton}>favoris</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageFavorite;","import \"./css/DetailCard.css\"\r\nimport EventServices from '../services/EventServices';\r\nimport ManageFavorite from \"./ManageFavorite\";\r\n\r\nconst DetailCard = ({event, onClose}) => {\r\n    // donnée envoyé par les'parents'\r\n    const eventID = event.id; \r\n    const EventData = event;\r\n\r\n    return(\r\n        <div className=\"main-content\">\r\n            {EventData &&\r\n            <div>\r\n            <div className=\"overlay\"></div>\r\n                <div className=\"detail-card\">\r\n                    <button className=\"close-detail\" onClick={() =>  onClose()}>Fermer</button>\r\n                    <h1>{EventData.fields.title}</h1>\r\n                    <div  className=\"event-detail\">\r\n                        <img src={EventData.fields.cover.url} alt={\"image de \"+EventData.fields.cover_alt}/>\r\n                        <div className=\"event-description\">\r\n                            <h4>Description : </h4>\r\n                            <p dangerouslySetInnerHTML={{ __html: EventData.fields.description }}></p>\r\n                        </div>\r\n                            <div className=\"event-infos\">\r\n                                <h4>Dates : </h4>\r\n                                <p>Du {EventServices.LocalDate(EventData.fields.date_start)} au {EventServices.LocalDate(EventData.fields.date_end)}</p>\r\n                                <h4>Prix : </h4>\r\n                                    <p>{EventData.fields.price_detail}</p>\r\n                                <h4>S'y rendre : </h4>\r\n                                <h5>Adresse : </h5>\r\n                                    <ul className=\"address\">\r\n                                        <li key={\"address_name\"+eventID}>{EventData.fields.address_name}</li>\r\n                                        <li key={\"address_street\"+eventID}>{EventData.fields.address_street}</li>\r\n                                        <li key={\"address_zipcode\"+eventID}>{EventData.fields.address_zipcode} {EventData.fields.address_city}</li>\r\n                                    </ul>      \r\n                                <h5>En transport : </h5>\r\n                                <p>{EventData.fields.transport}</p>\r\n                                <h4>Plus d'info : </h4>\r\n                                    <ul>\r\n                                        <li key={\"contact_phone\"+eventID}>{EventData.fields.contact_phone}</li>\r\n                                        <li key={\"contact_mail\"+eventID}>{EventData.fields.contact_mail}</li>\r\n                                        <li key={\"contact_twitter\"+eventID}>{EventData.fields.contact_twitter}</li>\r\n                                        <li key={\"contact_facebook\"+eventID}>{EventData.fields.contact_facebook}</li>\r\n                                        \r\n                                    </ul>\r\n                            </div>\r\n                        </div>\r\n                    <ManageFavorite id ={eventID} />\r\n                    </div>\r\n                    </div>}\r\n            \r\n            </div>  \r\n    )\r\n    \r\n    };\r\n    \r\nexport default DetailCard;","import React, { useState } from 'react';\r\nimport EventServices from '../services/EventServices';\r\nimport \"./css/LatestEvent.css\"\r\nimport DetailCard from './DetailCard';\r\nimport ManageFavorite from './ManageFavorite';\r\n    \r\nconst LatestEvent = (props) => {\r\n    const eventData = props.eventdata;\r\n    const [displayEventDetail, setDisplayEventDetail] =useState(false); \r\n    const [isActive, setActive] = useState(\"false\"); // pour le changement de class \r\n   \r\n    function SearchDetailEvent(){ // affiche l'évenement en détail\r\n        setDisplayEventDetail(true)\r\n        setActive(!isActive);\r\n    }\r\n    const CloseDetailEvent = () => { // ferme l'évenement en détail\r\n        setDisplayEventDetail(false) \r\n        setActive(!isActive);\r\n      }\r\n\r\n    return (\r\n        <div className=\"latest-event\">\r\n            {   eventData.fields &&\r\n                <div  className={isActive ? \"latest-event\" : \"none\"}> {/* change de class selon isActive */}\r\n                    <h3 onClick={SearchDetailEvent}>{eventData.fields.title}</h3>\r\n                    <div  className=\"event-content\">\r\n                        <img src={eventData.fields.cover.url} alt={eventData.fields.cover.filename}/>\r\n                        <ul>\r\n                            <li key={\"title\"+eventData.id}>{eventData.fields.title}</li>\r\n                            <li key={\"date-start\"+eventData.id}>Débute le {EventServices.LocalDate(eventData.fields.date_start)} à {EventServices.LocalHour(eventData.fields.date_start)}</li>\r\n                            <li key={\"date-end\"+eventData.id}>Termine le {EventServices.LocalDate(eventData.fields.date_end)} à {EventServices.LocalHour(eventData.fields.date_end)}</li>\r\n                            <li key={\"category\"+eventData.id}>Catégorie : {eventData.fields.category}</li>\r\n                            <li key={\"description\"+eventData.id}>Description : {eventData.fields.lead_text}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <ManageFavorite id ={eventData.id} />\r\n                </div>  \r\n            }\r\n            \r\n            {displayEventDetail &&\r\n                <DetailCard event={eventData} onClose={CloseDetailEvent}/>\r\n            }\r\n                \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LatestEvent;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ErrorData from '../components/ErrorData';\r\nimport LatestEvent from '../components/LatestEvent';\r\n\r\nconst Home = () => {\r\n    const[eventData, setEventData] = useState([]);\r\n    const [errorData, setErrorData] = useState(false);\r\n\r\n    const URL = \"https://opendata.paris.fr/api/v2/catalog/datasets/que-faire-a-paris-/records?sort=date_end&limit=1&pretty=false&timezone=UTC\"\r\n\r\n    useEffect(() =>{// se déclenche au chargement de la page 1 fois\r\n        axios.get(URL)// recupere données de l'api\r\n        .then((response) =>setEventData(response.data.records[0].record))\r\n            .catch(e => { // attrape erreur au niveau de l'echange entre l'api et le site\r\n                setErrorData(true) //si il y a une erreur alors changement de l'état l'erreur en true \r\n                console.log('erreur')});\r\n        }, [])\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <h1>Bienvenue sur Paris Events</h1>\r\n            <h2>Voici la dernière actualité</h2>\r\n            {eventData &&\r\n                <LatestEvent eventdata={eventData}/>\r\n            }\r\n            \r\n            {errorData &&\r\n                <ErrorData />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"./css/NotFound.css\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1>erreur</h1>\r\n            <p>La page que vous cherchez n'existe pas.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {useState } from 'react';\r\nimport \"./css/Card.css\"\r\nimport DetailCard from './DetailCard';\r\nimport EventServices from '../services/EventServices';\r\nimport ManageFavorite from './ManageFavorite';\r\n\t\r\nconst Card = (props) => {\r\n    // donnée reçu searchevents.js\r\n    const eventdata = props.eventdata;\r\n    const [displayEventDetail, setDisplayEventDetail] =useState(false); // affichage des details\r\n\r\n    const SearchDetailEvent = () => { // affiche\r\n        setDisplayEventDetail(true) \r\n    }\r\n\r\n    const CloseDetailEvent = () => {  // ferme\r\n        setDisplayEventDetail(false) \r\n      }\r\n\r\n    return(\r\n        <div className=\"search-result\">\r\n            <div className=\"all-cards\">\r\n            {!displayEventDetail && \r\n                <div className=\"card\">\r\n                    <h3 onClick={SearchDetailEvent}>{eventdata.record.fields.title}</h3>\r\n                    <div className=\"card-content\">\r\n                    <img src={eventdata.record.fields.cover.url} alt={\"image de \"+eventdata.record.fields.cover_alt}/>\r\n                    <ul>\r\n                        <li key={\"date-start\"+eventdata.record.id}>Débute le {EventServices.LocalDate(eventdata.record.fields.date_start)} à {EventServices.LocalHour(eventdata.record.fields.date_start)}</li>\r\n                        <li key={\"date-end\"+eventdata.record.id}>Termine le {EventServices.LocalDate(eventdata.record.fields.date_end)} à {EventServices.LocalHour(eventdata.record.fields.date_end)}</li>\r\n                        <li key={\"category\"+eventdata.record.id}>Catégorie : {eventdata.record.fields.category}</li>\r\n                        <li key={\"description\"+eventdata.record.id}>Description : {eventdata.record.fields.lead_text}</li>\r\n                    </ul>\r\n                    </div>\r\n                    <ManageFavorite id ={eventdata.record.id} />\r\n                </div>\r\n            }\r\n            </div>\r\n\r\n            <div>\r\n                { displayEventDetail && \r\n                    <DetailCard event={eventdata.record} onClose={CloseDetailEvent}/>\r\n                }\r\n            </div>       \r\n        \r\n        </div>\r\n    )\r\n    \r\n    };\r\n    \r\n\r\nexport default Card;\r\n\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '../components/Card';\r\nimport ErrorData from '../components/ErrorData';\r\nimport \"./css/SearchEvents.css\"\r\n\r\nconst SearchEvents = () => {\r\n\r\n    const [datas, setDatas] = useState([]);\r\n    const [errorData, setErrorData] = useState(false);\r\n    const [errorTerm, setErrorTerm] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\"); // term dans la barre de recherche\r\n    const URL=\"https://opendata.paris.fr/api/v2/catalog/datasets/que-faire-a-paris-/records?limit=10&search=\"\r\n  \r\n    useEffect(() =>{ // se déclenche va chercher les elements dans l'api\r\n        axios.get(URL)\r\n        .then((response) =>setDatas(response.data.records)) // les elements sont dans datas\r\n        .catch(e => {\r\n            setErrorData(true) //si il y a une erreur alors changement de l'état l'erreur en true \r\n            console.log('erreur')});\r\n    }, [])\r\n\r\n    const Reload = () => { // active au click\r\n        axios.get(URL+searchTerm)\r\n        .then((response) =>setDatas(response.data.records)) // les elements dans datas sont rechargés\r\n        .catch(e => {\r\n            setErrorData(true)\r\n            console.log('erreur')});\r\n            ErrorTermCheck();\r\n    };\r\n    const ErrorTermCheck = ()=>{ // vérifie si plus aucun élément ne correspond a la recherche \r\n        if(datas.length  === 0){\r\n            // console.log(datas.length)\r\n            setErrorTerm(true)\r\n        }\r\n     };\r\n     \r\n    const handleSearchTerm = (e) =>{ // recupère dans le input le term\r\n        let value = e.target.value;\r\n        setSearchTerm(value) // sa valeur est dans searchTerm\r\n    };\r\n \r\n    return (        \r\n        <div className=\"main-content\">\r\n            <h1>La liste des événements</h1>\r\n            <div className=\"search\">\r\n                <input placeholder= \"Rechercher un événement\" type='search' onInput = {handleSearchTerm} className='searchTermInput'/>\r\n                <button className=\"search-button\" onClick={Reload}>Rechercher</button>\r\n            </div>\r\n            <div className=\"event-card\">\r\n                {datas\r\n                .map((eventdata)=>{\r\n                    return(\r\n                        <div className=\"div\" key={eventdata.record.id} >\r\n                            <Card eventdata={eventdata} />\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n            {/* message apparait des que les evenements recherché sont infirieur a 1o */}\r\n            {errorTerm &&\r\n                <div className=\"error-term\">\r\n                    <p>Plus aucun événement ne correspond a votre recherche. Pour avoir plus de résultats réessayer avec un autre mot.</p>\r\n                </div>\r\n            }\r\n            {errorData &&\r\n            <ErrorData />\r\n            }\r\n        </div>\r\n    \r\n    );\r\n\r\n\r\n}\r\nexport default SearchEvents;","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport DetailCard from '../components/DetailCard';\r\n\r\nconst Event = () => {\r\n\r\n    const[eventData, setEventData] = useState([]);\r\n    const URL = \"https://opendata.paris.fr/api/v2/catalog/datasets/que-faire-a-paris-/records/ed7bf90eb37e980ca5bcc2477e6f3375854c3a51\"\r\n    // changer l'id\r\n    \r\n    useEffect(() =>{\r\n        axios.get(URL)\r\n        .then((response) =>setEventData(response.data.record));\r\n    },[])\r\n  \r\n    return (\r\n        <div className=\"main-content\">\r\n            {eventData.fields &&\r\n                <DetailCard eventdata={eventData} />\r\n            }\r\n            </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default Event;","import React from 'react';\r\n// import DisplayFavorite from '../components/DisplayFavorite';\r\n// import StorageService from '../services/StorageService';\r\n\r\n\r\nconst favorites = () => {\r\n    // const URL ='https://opendata.paris.fr/api/v2/catalog/datasets/que-faire-a-paris-/records/'+ eventsFavoriteID;\r\n    \r\n    \r\n    return (\r\n        <div className=\"main-content\">\r\n                <h1>Favoris</h1>\r\n                <p>Cette partie est cours de construction revenez plus tard.</p>\r\n                {/* <DisplayFavorite /> */}\r\n        </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default favorites;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\nimport \"./css/Navbar.css\"\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <nav>\r\n            <ul className=\"navbar\">\r\n            \r\n                <li>\r\n                    <NavLink exact to=\"/\" activeClassName=\"nav-active\">Accueil</NavLink>\r\n                </li>\r\n                \r\n                <li>\r\n                    <NavLink exact to=\"/recherche-des-evenements\" activeClassName=\"nav-active\">Liste des événements</NavLink>\r\n                </li>\r\n                \r\n                <li>\r\n                    <NavLink exact to=\"/vos-favoris\" activeClassName=\"nav-active\">Favoris</NavLink>\r\n                </li>\r\n                \r\n            </ul>\r\n        </nav>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Navbar;","import './App.css';\r\nimport Home from './views/Home';\r\nimport NotFound from './views/NotFound';\r\nimport SearchEvents from './views/SearchEvents';\r\nimport Event from './views/Event';\r\nimport Favorites from './views/Favorites';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\nfunction App() {\r\n  return(\r\n    <div className=\"page\">\r\n    <BrowserRouter>\r\n    <Navbar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/recherche-des-evenements\" exact component={SearchEvents} />\r\n        <Route path=\"/vos-favoris\" exact component={Favorites} />\r\n        <Route path=\"/evenement/id=\" exact component={Event} /> \r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}